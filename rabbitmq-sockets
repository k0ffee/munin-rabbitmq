#! /usr/bin/env perl

use strict;
use warnings;

#
# A Munin plugin.
#
# RabbitMQ socket usage.
#

if (exists $ARGV[0] and $ARGV[0] eq 'autoconf') {
    print "yes\n";
    exit 0;
}

open(my $status, '-|', 'rabbitmqctl status') or die "Can't open: $!";

my @maxsock = ();
my @sockets = ();

while (<$status>) {
    chomp;
    push @maxsock, $_ if /^\s*\{file_descriptors\s*,/ ...
                         /^\s*\[*\{sockets_limit\s*,/;
    push @sockets, $_ if /^\s*\{file_descriptors\s*,/ ...
                         /^\s*\[*\{sockets_used\s*,/;
}

die 'Error: no data' unless @maxsock and @sockets;

my $maxsock = $maxsock[-1];
$maxsock =~ s/\D//g;

die "Unexpected number: \$maxsock = \"$maxsock\""
    if $maxsock < 0;

my $sockets = $sockets[-1];
$sockets =~ s/\D//g;

die "Unexpected number: \$sockets = \"$sockets\""
    if $sockets < 0;
die "Error: \$maxsock smaller than \$sockets: $maxsock $sockets"
    if $maxsock < $sockets;

if (exists $ARGV[0] and $ARGV[0] eq 'config') {

    print 'graph_args --base 1000 -l 0 --vertical-label Sockets '
        . "--upper-limit $maxsock\n"
        . "graph_title RabbitMQ socket usage\n"
        . "graph_order used free\n"
        . "graph_category rabbitmq\n"
        . "used.label used\n"
        . "used.colour COLOUR2\n"
        . "used.draw AREA\n"
        . "free.label free\n"
        . "free.colour COLOUR18\n"
        . "free.draw STACK\n";
    exit 0;
}

print "free.value " . ($maxsock - $sockets) . "\n";
print "used.value $sockets\n";
